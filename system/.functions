# Get named var (usage: get "VAR_NAME")

get() {
  echo "${!1}"
}

# Add to path

prepend-path() {
  [ -d $1 ] && PATH="$1:$PATH"
}

# Show 256 TERM colors

colors() {
  local X=$(tput op)
  local Y=$(printf %$((COLUMNS-6))s)
  for i in {0..256}; do
  o=00$i;
  echo -e ${o:${#o}-3:3} $(tput setaf $i;tput setab $i)${Y// /=}$X;
  done
}

# Calculator

calc() {
  echo "$*" | bc -l;
}

# Weather

meteo() {
  local LOCALE=$(echo ${LANG:-en} | cut -c1-2)
  if [ $# -eq 0 ]; then
    local LOCATION=$(curl -s ipinfo.io/loc)
  else
    local LOCATION=$1
  fi
  curl -s "$LOCALE.wttr.in/$LOCATION"
}

# Markdown

md() {
  pandoc $1 | lynx -stdin -dump
}

# Create a new directory and enter it
function mk() {
  mkdir -p "$@" && cd "$@"
}

# Get IP from hostname

hostname2ip() {
  ping -c 1 "$1" | egrep -m1 -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'
}

new_sp() {

    repo_name=$1

    dir_name=`basename $(pwd)`

    if [ "$repo_name" = "" ]; then
    echo "Repo name should be provided"
    return 1
    fi

    username=`git config github.user`
    if [ "$username" = "" ]; then
    echo "Could not find username, run 'git config --global github.user <username>'"
    invalid_credentials=1
    fi

    token=`git config github.token`
    if [ "$token" = "" ]; then
    echo "Could not find token, run 'git config --global github.token <token>'"
    invalid_credentials=1
    fi

    if [ "$invalid_credentials" == "1" ]; then
    return 1
    fi

    echo -n "Creating Github repository '$repo_name' ..."
    curl -u "$username:$token" https://api.github.com/user/repos -d '{"name":"'$repo_name'"}' > /dev/null 2>&1
    echo " done."

    curl -G https://start.spring.io/starter.tgz \
                -d dependencies=web,postgresql,testcontainers,lombok,flyway,actuator,data-jpa \
                -d javaVersion=17 \
                -d type=gradle-project \
                -d baseDir=$repo_name | tar -xvzf -
    cd $repo_name
    echo -n "Pushing local code to remote ..."
    git init && git add . && git commit -m 'Automatic initial commit'
    git branch -M main
    git remote add origin git@github.com:$username/$repo_name.git
    git push -u origin main
    echo " done."
}